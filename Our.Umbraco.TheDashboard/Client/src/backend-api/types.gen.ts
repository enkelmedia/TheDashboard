// This file is auto-generated by @hey-api/openapi-ts

export type CountersFrontendModel = {
    counters: Array<(DashboardCounterModel)>;
};

export type DashboardCounterModel = {
    text: string;
    count: number;
    /**
     * Used to provide a click url for a counter, ie linking to a content item or any given URL
     */
    clickUrl: string;
    /**
     * Provides a way to "click" on a element in the backoffice UI by providing a CSS selector. Ie. *[data-element=tab-contentIntro] > a to show the intro dashboard.
     */
    clickElement: string;
    style: string;
};

export type PendingContentNotScheduledFrontendModel = {
    count: number;
    items: Array<(RecentActivityFrontendModel)>;
};

export type RecentActivitiesFrontendModel = {
    allItems: Array<(RecentActivityFrontendModel)>;
    yourItems: Array<(RecentActivityFrontendModel)>;
};

export type RecentActivityFrontendModel = {
    activityType: string;
    nodeName: string;
    nodeId: number;
    user: UserFrontendModel;
    datestamp: string;
    scheduledPublishDate?: string | null;
};

export type UserFrontendModel = {
    name: string;
    avatar: Array<(string)>;
};

export type GetAllRecentActivitiesResponse = RecentActivitiesFrontendModel;

export type GetCountersResponse = CountersFrontendModel;

export type GetPendingResponse = PendingContentNotScheduledFrontendModel;

export type $OpenApiTs = {
    '/umbraco/api/the-dashboard/dashboard/get-all-recent-activities': {
        get: {
            res: {
                /**
                 * Success
                 */
                200: RecentActivitiesFrontendModel;
            };
        };
    };
    '/umbraco/api/the-dashboard/dashboard/get-counters': {
        get: {
            res: {
                /**
                 * Success
                 */
                200: CountersFrontendModel;
            };
        };
    };
    '/umbraco/api/the-dashboard/dashboard/get-pending': {
        get: {
            res: {
                /**
                 * Success
                 */
                200: PendingContentNotScheduledFrontendModel;
            };
        };
    };
};