// This file is auto-generated by @hey-api/openapi-ts

export type CountersFrontendModel = {
    counters: Array<DashboardCounterModel>;
};

export type DashboardCounterModel = {
    /**
     * Localization key used in the frontend for translation. Prefer using this over Our.Umbraco.TheDashboard.Counters.DashboardCounterModel.Text if possible.
     */
    localizationKey: string;
    /**
     * Hardcoded text for the counter.
     */
    text: string;
    count: number;
    /**
     * Used to provide a click url for a counter, ie linking to a content item or any given URL
     */
    clickUrl: string;
    /**
     * Provides a way to "click" on an element in the backoffice UI by providing a CSS selector.
     * Ie. *[data-element=tab-contentIntro] > a to show the intro dashboard.
     * @deprecated
     */
    clickElement: string;
    style: string;
};

export type PendingContentNotScheduledFrontendModel = {
    count: number;
    items: Array<RecentActivityFrontendModel>;
};

export type RecentActivitiesFrontendModel = {
    allItems: Array<RecentActivityFrontendModel>;
    yourItems: Array<RecentActivityFrontendModel>;
};

export type RecentActivityFrontendModel = {
    activityType: string;
    nodeName: string;
    nodeKey: string;
    user: UserFrontendModel;
    datestamp: string;
    scheduledPublishDate?: string | null;
};

export type UserAvatarFrontendModel = {
    src: string;
    srcSet: string;
};

export type UserFrontendModel = {
    name: string;
    avatar: UserAvatarFrontendModel;
};

export type GetAllRecentActivitiesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/api/the-dashboard/dashboard/get-all-recent-activities';
};

export type GetAllRecentActivitiesErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetAllRecentActivitiesResponses = {
    /**
     * OK
     */
    200: RecentActivitiesFrontendModel;
};

export type GetAllRecentActivitiesResponse = GetAllRecentActivitiesResponses[keyof GetAllRecentActivitiesResponses];

export type GetCountersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/api/the-dashboard/dashboard/get-counters';
};

export type GetCountersErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetCountersResponses = {
    /**
     * OK
     */
    200: CountersFrontendModel;
};

export type GetCountersResponse = GetCountersResponses[keyof GetCountersResponses];

export type GetPendingData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/api/the-dashboard/dashboard/get-pending';
};

export type GetPendingErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetPendingResponses = {
    /**
     * OK
     */
    200: PendingContentNotScheduledFrontendModel;
};

export type GetPendingResponse = GetPendingResponses[keyof GetPendingResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:24760' | (string & {});
};